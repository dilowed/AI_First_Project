#include<bits/stdc++.h>
using namespace std;
using pii = pair<int,int>;
pii arr[32];
int dist(int x, int y)
{
  return abs(arr[x].first - arr[y].first) + abs(arr[x].second - arr[y].second);
}
int main()
{
  int n; cin>>n;
  int SZ; cin>>SZ;
  for(int i=0; i<n; i++) 
  {
    cin>>arr[i].first>>arr[i].second;
  }
  arr[n].first = arr[n].second = SZ;
  vector<vector<int>> dp(n+1, vector<int>(1<<(n+1), INT_MAX)); // dp[i][j] = 현재 위치 i번 점, 방문상태 = j일 때 최단거리
  for(int i=0; i<n; i++) 
  {
    dp[i][(1<<i)] = arr[i].first + arr[i].second - 2;
  }
  for(int j=1; j<(1<<(n+1)); j++)
  {
    for(int i=0; i<=n; i++)
    {
      if(dp[i][j] == INT_MAX) continue;
      for(int k=0; k<=n; k++)
      {
        if(j & (1<<k)) continue;
        dp[k][j | (1<<k)] = min(dp[k][j|(1<<k)], dp[i][j] + dist(i,k));
      }
    }
  }
  cout<<dp[n][(1<<(n+1))-1] + n;
}